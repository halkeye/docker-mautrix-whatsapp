name: Continuous Delivery

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  MAUTRIX_WHATSAPP_VERSION: 0.10.7

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write


    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@f7b4ed12385588c3f9bc252f0a2b520d83b52d48
        with:
          images: "ghcr.io/${{ github.repository }}"
          labels: |
            org.opencontainers.image.source=https://github.com/mautrix/whatsapp
            org.opencontainers.image.url=https://github.com/mautrix/whatsapp
            org.opencontainers.image.revision=v${{env.MAUTRIX_WHATSAPP_VERSION}}
          tags: |
            type=raw,value=${{env.MAUTRIX_WHATSAPP_VERSION}}-${{ github.run_number }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25
        with:
          context: .
          push: true
          build-args: |
            WHATSAPP_VERSION=${{ env.WHATSAPP_VERSION }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

